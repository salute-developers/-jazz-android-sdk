plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    compileSdk 33

    defaultConfig {
        applicationId "com.sd.jazz_testapp"
        minSdk 25
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            storeFile file("JazzDemoAppKeystore")
            storePassword "123456"
            keyAlias "jazz-demo-app"
            keyPassword "123456"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
    }
    packagingOptions {
        pickFirst '**/*.so'
        pickFirst 'META-INF/kotlinx_coroutines_core.version'
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.5.0'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.lifecycle:lifecycle-runtime:2.6.2'

    //Jazz SDK
    implementation("com.sdkit.android.jazz:jazz-public-sdk:23.11.1.97")
    implementation("com.sdkit.jazz:jazzcastlib:1.15.3")

    //region TODO Не правильно подтягиваются из pom зависимости, подключенные через bom
    implementation(platform('androidx.compose:compose-bom:2022.11.00'))
    implementation(platform('com.google.firebase:firebase-bom:32.0.0'))
    //endregion

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}

String getJazzVersion() {
    return "23.10.2.90"
}

configurations.all {
    resolutionStrategy.dependencySubstitution {
        // Тут перенаправляем все core что требуется внутри платформы в fataar артефакт
        substitute(module("ru.sberdevices.core:analytics"))
                .using(module("com.sdkit.android.core:core-ext:" + getJazzVersion()))
        substitute(module("ru.sberdevices.core:analytics_api"))
                .using(module("com.sdkit.android.core:core-ext:" + getJazzVersion()))
        substitute(module("ru.sberdevices.core:di_api"))
                .using(module("com.sdkit.android.core:core-ext:" + getJazzVersion()))
        substitute(module("ru.sberdevices.core:di"))
                .using(module("com.sdkit.android.core:core-ext:" + getJazzVersion()))
        substitute(module("ru.sberdevices.core:di_graph"))
                .using(module("com.sdkit.android.core:core-ext:" + getJazzVersion()))
        substitute(module("ru.sberdevices.core:utils"))
                .using(module("com.sdkit.android.core:core-ext:" + getJazzVersion()))
        substitute(module("ru.sberdevices.core:utils_api"))
                .using(module("com.sdkit.android.core:core-ext:" + getJazzVersion()))
        substitute(module("ru.sberdevices.core:logging_api"))
                .using(module("com.sdkit.android.core:core-ext:" + getJazzVersion()))
        substitute(module("ru.sberdevices.core:logging"))
                .using(module("com.sdkit.android.core:core-ext:" + getJazzVersion()))
        substitute(module("ru.sberdevices.core:platform"))
                .using(module("com.sdkit.android.core:core-ext:" + getJazzVersion()))
        substitute(module("ru.sberdevices.core:platform_api"))
                .using(module("com.sdkit.android.core:core-ext:" + getJazzVersion()))
        substitute(module("ru.sberdevices.core:designsystem"))
                .using(module("com.sdkit.android.core:core-ext:" + getJazzVersion()))
        substitute(module("ru.sberdevices.core:viewmodels"))
                .using(module("com.sdkit.android.core:core-ext:" + getJazzVersion()))
        substitute(module("ru.sberdevices.core:coroutines"))
                .using(module("com.sdkit.android.core:core-ext:" + getJazzVersion()))
        substitute(module("ru.sberdevices.core:coroutines_api"))
                .using(module("com.sdkit.android.core:core-ext:" + getJazzVersion()))
        substitute(module("ru.sberdevices.core:config_api"))
                .using(module("com.sdkit.android.core:core-ext:" + getJazzVersion()))
        substitute(module("ru.sberdevices.core:config"))
                .using(module("com.sdkit.android.core:core-ext:" + getJazzVersion()))
        substitute(module("ru.sberdevices.core:network_api"))
                .using(module("com.sdkit.android.core:core-ext:" + getJazzVersion()))
        substitute(module("ru.sberdevices.core:network"))
                .using(module("com.sdkit.android.core:core-ext:" + getJazzVersion()))

        substitute(module("ru.sberdevices.core:font"))
                .using(module("com.sdkit.android.core:core-font:" + getJazzVersion()))

    }
}